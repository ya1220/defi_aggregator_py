######################################################################################

create droplet / VPS
	add domain name
	add www A record - to point www.domain.xxx to the IP address

CREATE NEW USER - https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-20-04
	adduser ya1220
	usermod -aG sudo ya1220
	ufw app list
	ufw allow OpenSSH
	ufw enable
	ufw status
	
	rsync --archive --chown=ya1220:ya1220 ~/.ssh /home/ya1220 #this address??
	rsync --archive --chown=ya1220:ya1220 ~/.ssh /var/www/anagami

INSTALL NGINX - https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-20-04
	sudo apt update
	sudo apt install nginx
	sudo ufw app list
	sudo ufw allow 'Nginx HTTP'
	sudo ufw status
	systemctl status nginx
	curl -4 icanhazip.com
	sudo systemctl reload nginx
	sudo systemctl enable nginx
		
	sudo mkdir -p /var/www/anagami #or git clone to make it

	sudo chown -R ya1220:ya1220 /var/www/anagami
	sudo chmod -R 755 /var/www/anagami
	##nano /var/www/your_domain/html/index.html
	
	sudo nano /etc/nginx/sites-available/anagami.ai
	
	#create server config
server {
	listen 80;
	server_name anagami.ai www.anagami.ai;

	location / {
		include proxy_params;
		proxy_pass http://unix:/var/www/anagami/anagami.sock;
	}
}
	
	sudo ln -s /etc/nginx/sites-available/anagami.ai /etc/nginx/sites-enabled/
	sudo nginx -t #check config
	sudo nano /etc/nginx/nginx.conf
	
	#uncomment server_names 64
		http {
			...
			server_names_hash_bucket_size 64;
			...
		}


	sudo nginx -t
	sudo systemctl restart nginx

COMPILE THE APP
	sudo apt install python3-venv

	cd /var/www/	
	git clone https://gitlab.doc.ic.ac.uk/ya1220/anagami_web_gitlab.git
	sudo mv anagami_web_gitlab anagami #sudo mkdir -p /var/www/anagami

	sudo chown -R ya1220:ya1220 /var/www/anagami
	sudo chmod -R 755 /var/www/anagami
	cd /var/www/anagami
	#nano ~/myproject/myproject.py #for digitalocean example
	
	apt install python3.8-venv
	python3.8 -m venv anagamienv
	source anagamienv/bin/activate
	
	
	pip install wheel
	pip install gunicorn flask
	sudo apt-get install python-tk
	sudo apt install python3.8-tk

	pip install -r requirements.txt
	more installs if automatic install fails - pandas
	remove windows modules from requirements.txt for it to install
	
	python3 setup.py build_ext --inplace

GUNICORN - https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-gunicorn-and-nginx-on-ubuntu-18-04
	https://www.digitalocean.com/community/questions/deploying-a-dash-app-with-gunicorn-on-ubuntu-nginx
	
	sudo apt update
	sudo apt install python3-pip python3-dev build-essential libssl-dev libffi-dev python3-setuptools
	sudo ufw allow 5000
	
	#cd ~/myproject
	gunicorn --bind 0.0.0.0:5000 wsgi:app #needs all modules in venv to be installed BOTTLENECK ************************************** NEED TO FIX
	gunicorn --bind 0.0.0.0:5000 wsgi:server #THIS WORKED - added from app import server in wsgi.py
	
	change flask serve port to 5000
	
	the website should now run at ip:5000
	
	deactivate

	sudo nano /etc/systemd/system/anagami.service
	
	 #HERE AS WELL wsgi:app ---> wsgi:server
	
[Unit]
Description=Gunicorn instance to serve anagami
After=network.target

[Service]
User=ya1220
Group=www-data
WorkingDirectory=/var/www/anagami
Environment="PATH=/var/www/anagami/anagamienv/bin"
ExecStart=/var/www/anagami/anagamienv/bin/gunicorn --workers 3 --bind unix:anagami.sock -m 007 wsgi:server

[Install]
WantedBy=multi-user.target


	sudo systemctl start anagami #DOES NOT WORK BECAUSE GUNICORN IS MISCONFIGURED
	sudo systemctl enable anagami #DOES NOT WORK BECAUSE GUNICORN IS MISCONFIGURED
	sudo systemctl status anagami #DOES NOT WORK BECAUSE GUNICORN IS MISCONFIGURED
	sudo systemctl restart anagami
	sudo systemctl disable anagami #TO UPDATE
	sudo systemctl stop anagami
	
	need to stop then start again then recompiling - just starting again will not work
		
	FAILED HERE - fixed after re-saving the sites-available/anagami.ai and fixing the nginx.conf uncomment issue
	
	sudo systemctl restart nginx
	sudo ufw delete allow 5000
	sudo ufw allow 'Nginx Full'

CERTBOT
	sudo add-apt-repository ppa:certbot/certbot #DOES NOT WORK this works: sudo apt-add-repository -r ppa:certbot/certbot
	sudo apt install python3-certbot-nginx
	https://askubuntu.com/questions/1278936/install-certbot-on-ubuntu-20-04

	sudo certbot --nginx -d anagami.ai -d www.anagami.ai

	sudo ufw delete allow 'Nginx HTTP'


MONGO - https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/

	mongo fix connection -	did not work: cannot connect - DONE - dnspython was the problem
 	
	sudo rm /var/lib/mongodb/mongod.lock
	sudo mongod --repair
	sudo service mongod restart
	sudo service mongod status	
	try catch hides the missing dnspython module
	delete all .c files and recompile if fails
	error with np.float vs float in event.pyx

	sudo chown -R ya1220:ya1220 /var/lib/mongodb
	sudo chown ya1220:ya1220 /tmp/mongodb-27017.sock


	QUIT MONGO CONNECTION ON SERVER

EMAIL:
	lynx does not work
	sudo apt-get install msmtp-mta
	https://embedjournal.com/how-to-use-gmail-from-terminal-linux/
	
#Gmail account

defaults
#change the location of the log file to any desired location.
logfile ~/msmtp.log
account gmail
auth on
host smtp.gmail.com
from anagamicapital@gmail.com
auth on
tls on
tls_trust_file /usr/share/ca-certificates/mozilla/Equifax_Secure_CA.crt
user anagamicapital@gmail.com
password XXX
port 587
#set gmail as your default mail server.
account default : gmail
	
	
		
REMAINING:
	email
	https://github.com/russellromney/dash-auth-flow
	https://github.com/RafaelMiquelino/dash-flask-login
	disconnect db each time
	compression on crypto to speed things up
	merge the gitlab and the old anagami to single source
	ensure FX data updates
	
	TTL
	upload crypto 24h to namecheap vps
	upload stocks 24h to namecheap vps
	host database locally
		
	https://chriswarrick.com/blog/2016/02/10/deploying-python-web-apps-with-nginx-and-uwsgi-emperor/

	roman empire letter
	why classic inflation and rates argument is out of date
	
	https://kifarunix.com/configure-postfix-to-use-gmail-smtp-on-ubuntu-20-04/

	setup script exited with error: command 'x86_64-linux-gnu-gcc' failed with exit status 1
	sudo apt-get install libxml2-dev libxslt1-dev
	sudo apt-get install python3.8-dev
 
 sudo apt remove apache2
	
	
OPEN ACCESS TO DB

delete dir + reload it
run these 2 commands WITHOUT anything else
sudo chown -R www-data:www-data /var/www/anagami/db/
sudo chmod -R u+w /var/www/anagami/db/

sudo chmod 666 users.db
sudo chmod 777 db

cd db
sudo cp users.db /var/www/db_backup
sudo cp /var/www/db_backup/users.db /var/www/anagami/db

sudo cp /var/www/db_backup/users.db /var/www/anagami_web_gitlab/db

https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2020-06-01/2020-06-17?apiKey=*
https://api.polygon.io/v1/historic/forex/USD/RUB/2005-10-01?limit=10000&apiKey=*


git reset --merge

cp -R /var/www/anagami/anagamienv /var/www/anagami_web_gitlab/

update gunicorn.conf.py timeout
https://github.com/benoitc/gunicorn/blob/master/examples/example_config.py


UPDATING PULL

NEVER OVERWRITE DB
update newsletter links - copy db - push - copy db back

___________________________________________________________________________
DB INSTRUCTIONS WHICH DO NOT WORK

sudo chown -R www-data:www-data /var/www/anagami/db/
sudo chmod -R u+w /var/www/anagami/db/
___________________________________________________________________________
MONGO REDEPLOYMENT ON LOCALHOST
https://stackoverflow.com/questions/11255630/how-to-export-all-collections-in-mongodb
___________________________________________________________________________

Hostname	Record type	Priority	Value
@	MX	10	mx1.privateemail.com
@	MX	10	mx2.privateemail.com
@	TXT		v=spf1 include:spf.privateemail.com ~all

___________________________________________________________________________

REDEPLOYMENT INSTRUCTIONS

0. login to digitalocean droplet - change user
	su ya1220

1. make copy of user database
	cd db
	sudo cp users.db /var/www/db_backup

2. sudo git clone repo - fresh
	cd /var/www/	
	git clone https://gitlab.doc.ic.ac.uk/ya1220/anagami_web_gitlab.git

3. copy virtualenv
	copy anagamienv - cp -R /var/www/anagami/anagamienv /var/www/anagami_web_gitlab/
	activate - source anagamienv/bin/activate

4. sudo chown folder
	sudo chown -R ya1220:ya1220 /var/www/anagami
	sudo chmod -R 755 /var/www/anagami

5. compile
	python3 setup.py build_ext --inplace

6. rename old folder - from anagami to something else
7. rename anagami_web_gitlab to anagami

8. copy database back
	sudo cp /var/www/db_backup/users.db /var/www/anagami/db

8. sudo chown db
	sudo chown -R www-data:www-data /var/www/anagami/db/
	sudo chmod -R u+w /var/www/anagami/db/
	sudo chmod 666 users.db
	sudo chmod 777 db
	*** not enough

9. set WEB_VERSION to TRUE
	sudo vim CONSTANTS.py

10. test 
	python3 wsgi.py

11. restart service on drive
	sudo systemctl restart anagami
	sudo systemctl status anagami
	
	sudo systemctl restart nginx
	sudo systemctl status nginx
